spring:
  main:
    # 解决同一个实体对多张表的问题
    allow-bean-definition-overriding: true

  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.94.194:3306/test
        username: root
        password: Abc@123.
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.94.195:3306/test
        username: root
        password: Abc@123.
    sharding:
      tables:
        user:
          # 指定数据表分布情况
          actual-data-nodes: ds$->{0..1}.user_$->{0..1}
          key-generator:
            column: id
            type: SNOWFLAKE
          # 指定数据库分片策略
          database-strategy:
            inline:
              sharding-column: id
              algorithm-expression: ds$->{id%2}
          # 指定表分片策略
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: user_$->{id%2}
    props:
      sql:
        # 打印sql输出
        show: true
